@inject IJSRuntime JsRuntime

@using BlazorClient.Logic.Models.Modal
@typeparam TModel

<div id="@ModalId" class="modal fade" data-backdrop="static" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="close" aria-label="Close" @onclick="@Cancel">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@Model" OnValidSubmit="@Confirm">
                    <DataAnnotationsValidator/>
                    @ChildContent
                    <ValidationSummary/>
                    <div class="form-row align-items-end">
                        <button type="submit" class="btn btn-success">@ButtonText</button>
                    </div>
                </EditForm>
            </div>

        </div>
    </div>
</div>


@code {

    [Parameter]
    public string ModalId { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string ButtonText { get; set; }

    [Parameter]
    public TModel Model { get; set; }


    private TaskCompletionSource<FormModalResult<TModel>> _resultTask;

    public Task<FormModalResult<TModel>> Open()
    {
        _resultTask = new TaskCompletionSource<FormModalResult<TModel>>();
        Show();
        return _resultTask.Task;
    }

    private void Confirm()
    {
        var result = new FormModalResult<TModel> {IsSuccess = true, Result = Model};
        _resultTask.SetResult(result);
        Hide();
    }

    private void Cancel()
    {
        var result = new FormModalResult<TModel> {IsSuccess = false, Result = default};
        _resultTask.SetResult(result);
        Hide();
    }

    private void Show()
        => JsRuntime.InvokeAsync<string>("ShowModal", ModalId);

    private void Hide()
        => JsRuntime.InvokeAsync<string>("HideModal", ModalId);

}